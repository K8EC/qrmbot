#!/usr/bin/perl
# Translation client using Google Translate API and DeepL API
#
# 2-clause BSD license.
# Copyright (c) 2020 molo1134@github. All rights reserved.

use strict;
use utf8;
use Encode qw(decode);
use feature 'unicode_strings';
binmode(STDOUT, ":utf8");

use URI::Escape;
use JSON qw( decode_json );

use File::Basename;
use Cwd 'realpath';
use lib dirname(realpath(__FILE__));
use Colors;
use Util;

# disable "experimental" warning on smart match operator use
no if $] >= 5.018, warnings => "experimental::smartmatch";

my $username = $ENV{'USER'} || $ENV{'USERNAME'} || getpwuid($<);

# change this to 0 to always exit with success
our $exitnonzeroonerror = 1;
$exitnonzeroonerror = 0 if $username eq getEggdropUID();

#print "input:\n";
#my $j = 0;
#while ($j <= $#ARGV) {
#  my $hex = $ARGV[$j];
#  $hex =~ s/(.)/sprintf("%02X ", ord($1))/eg;
#  print "ARGV[$j] = $hex\n";
#  $j++;
#}

@ARGV = map { decode "utf-8", $_ } @ARGV;

#print "decoded:\n";
#$j = 0;
#while ($j <= $#ARGV) {
#  my $hex = $ARGV[$j];
#  $hex =~ s/(.)/sprintf("%02X ", ord($1))/eg;
#  print "ARGV[$j] = $hex\n";
#  $j++;
#}


if ($#ARGV < 0 || length($ARGV[0]) == 0) {
  if ($username eq getEggdropUID()) {
    print "usage: !translate [--deepl|--google] [sourcelang] <targetlang> <text>\n";
  } else {
    print "usage: $0 [--deepl|--google] [sourcelang] <targetlang> <text>\n";
  }
  exit $exitnonzeroonerror;
}

# from https://cloud.google.com/translate/docs/languages  on  2020-01-09
my %lang;
$lang{af} = "Afrikaans";
$lang{sq} = "Albanian";
$lang{am} = "Amharic";
$lang{ar} = "Arabic";
$lang{hy} = "Armenian";
$lang{az} = "Azerbaijani";
$lang{eu} = "Basque";
$lang{be} = "Belarusian";
$lang{bn} = "Bengali";
$lang{bs} = "Bosnian";
$lang{bg} = "Bulgarian";
$lang{ca} = "Catalan";
$lang{ceb} = "Cebuano";
$lang{zh} = "Chinese (Simplified)";
$lang{"zh-TW"} = "Chinese (Traditional)";
$lang{co} = "Corsican";
$lang{hr} = "Croatian";
$lang{cs} = "Czech";
$lang{da} = "Danish";
$lang{nl} = "Dutch";
$lang{en} = "English";
$lang{eo} = "Esperanto";
$lang{et} = "Estonian";
$lang{fi} = "Finnish";
$lang{fr} = "French";
$lang{fy} = "Frisian";
$lang{gl} = "Galician";
$lang{ka} = "Georgian";
$lang{de} = "German";
$lang{el} = "Greek";
$lang{gu} = "Gujarati";
$lang{ht} = "Haitian Creole";
$lang{ha} = "Hausa";
$lang{haw} = "Hawaiian";
$lang{he} = "Hebrew";
$lang{hi} = "Hindi";
$lang{hmn} = "Hmong";
$lang{hu} = "Hungarian";
$lang{is} = "Icelandic";
$lang{ig} = "Igbo";
$lang{id} = "Indonesian";
$lang{ga} = "Irish";
$lang{it} = "Italian";
$lang{ja} = "Japanese";
$lang{jv} = "Javanese";
$lang{kn} = "Kannada";
$lang{kk} = "Kazakh";
$lang{km} = "Khmer";
$lang{ko} = "Korean";
$lang{ku} = "Kurdish";
$lang{ky} = "Kyrgyz";
$lang{lo} = "Lao";
$lang{la} = "Latin";
$lang{lv} = "Latvian";
$lang{lt} = "Lithuanian";
$lang{lb} = "Luxembourgish";
$lang{mk} = "Macedonian";
$lang{mg} = "Malagasy";
$lang{ms} = "Malay";
$lang{ml} = "Malayalam";
$lang{mt} = "Maltese";
$lang{mi} = "Maori";
$lang{mr} = "Marathi";
$lang{mn} = "Mongolian";
$lang{my} = "Myanmar (Burmese)";
$lang{ne} = "Nepali";
$lang{no} = "Norwegian";
$lang{ny} = "Nyanja (Chichewa)";
$lang{ps} = "Pashto";
$lang{fa} = "Persian";
$lang{pl} = "Polish";
$lang{pt} = "Portuguese (Portugal, Brazil)";
$lang{pa} = "Punjabi";
$lang{ro} = "Romanian";
$lang{ru} = "Russian";
$lang{sm} = "Samoan";
$lang{gd} = "Scots Gaelic";
$lang{sr} = "Serbian";
$lang{st} = "Sesotho";
$lang{sn} = "Shona";
$lang{sd} = "Sindhi";
$lang{si} = "Sinhala (Sinhalese)";
$lang{sk} = "Slovak";
$lang{sl} = "Slovenian";
$lang{so} = "Somali";
$lang{es} = "Spanish";
$lang{su} = "Sundanese";
$lang{sw} = "Swahili";
$lang{sv} = "Swedish";
$lang{tl} = "Tagalog (Filipino)";
$lang{tg} = "Tajik";
$lang{ta} = "Tamil";
$lang{te} = "Telugu";
$lang{th} = "Thai";
$lang{tr} = "Turkish";
$lang{uk} = "Ukrainian";
$lang{ur} = "Urdu";
$lang{uz} = "Uzbek";
$lang{vi} = "Vietnamese";
$lang{cy} = "Welsh";
$lang{xh} = "Xhosa";
$lang{yi} = "Yiddish";
$lang{yo} = "Yoruba";
$lang{zu} = "Zulu";

# from https://api-free.deepl.com/v2/languages?type=target (auth required) March 2023
my %lang_dl_target;
$lang_dl_target{bg} = "Bulgarian";
$lang_dl_target{cs} = "Czech";
$lang_dl_target{da} = "Danish";
$lang_dl_target{de} = "German";
$lang_dl_target{el} = "Greek";
$lang_dl_target{en} = "English";
$lang_dl_target{"en-gb"} = "English (British)";
$lang_dl_target{"en-us"} = "English (American)";
$lang_dl_target{es} = "Spanish";
$lang_dl_target{et} = "Estonian";
$lang_dl_target{fi} = "Finnish";
$lang_dl_target{fr} = "French";
$lang_dl_target{hu} = "Hungarian";
$lang_dl_target{id} = "Indonesian";
$lang_dl_target{it} = "Italian";
$lang_dl_target{ja} = "Japanese";
$lang_dl_target{ko} = "Korean";
$lang_dl_target{lt} = "Lithuanian";
$lang_dl_target{lv} = "Latvian";
$lang_dl_target{nb} = "Norwegian";
$lang_dl_target{nl} = "Dutch";
$lang_dl_target{pl} = "Polish";
$lang_dl_target{pt} = "Portuguese";
$lang_dl_target{"pt-br"} = "Portuguese (Brazilian)";
$lang_dl_target{"pt-pt"} = "Portuguese (European)";
$lang_dl_target{ro} = "Romanian";
$lang_dl_target{ru} = "Russian";
$lang_dl_target{sk} = "Slovak";
$lang_dl_target{sl} = "Slovenian";
$lang_dl_target{sv} = "Swedish";
$lang_dl_target{tr} = "Turkish";
$lang_dl_target{uk} = "Ukrainian";
$lang_dl_target{zh} = "Chinese (simplified)";

# from https://api-free.deepl.com/v2/languages?type=source (auth required) March 2023
my %lang_dl_source;
$lang_dl_source{bg} = "Bulgarian";
$lang_dl_source{cs} = "Czech";
$lang_dl_source{da} = "Danish";
$lang_dl_source{de} = "German";
$lang_dl_source{el} = "Greek";
$lang_dl_source{en} = "English";
$lang_dl_source{es} = "Spanish";
$lang_dl_source{et} = "Estonian";
$lang_dl_source{fi} = "Finnish";
$lang_dl_source{fr} = "French";
$lang_dl_source{hu} = "Hungarian";
$lang_dl_source{id} = "Indonesian";
$lang_dl_source{it} = "Italian";
$lang_dl_source{ja} = "Japanese";
$lang_dl_source{ko} = "Korean";
$lang_dl_source{lt} = "Lithuanian";
$lang_dl_source{lv} = "Latvian";
$lang_dl_source{nb} = "Norwegian";
$lang_dl_source{nl} = "Dutch";
$lang_dl_source{pl} = "Polish";
$lang_dl_source{pt} = "Portuguese";
$lang_dl_source{ro} = "Romanian";
$lang_dl_source{ru} = "Russian";
$lang_dl_source{sk} = "Slovak";
$lang_dl_source{sl} = "Slovenian";
$lang_dl_source{sv} = "Swedish";
$lang_dl_source{tr} = "Turkish";
$lang_dl_source{uk} = "Ukrainian";
$lang_dl_source{zh} = "Chinese";

# eggdrop doesn't split args on spaces
@ARGV=split(' ', join(' ',@ARGV));

my ($do_dl, $do_goog) = (0, 0);
my ($source, $target, $query) = (undef, undef, undef);
my ($lang1, $lang2);
my $i = 0;
while ($i <= $#ARGV) {

  if ($ARGV[$i] =~ /--d(eep)?l/) {
    $do_dl = 1;
    $i++;
  }
  if ($ARGV[$i] =~ /--goog/) {
    $do_goog = 1;
    $i++;
  }

  if ((not defined $lang1 or not defined $lang2) and not defined $query) {

    my $found = 0;
    foreach my $k (keys %lang) {
      $found = 1 if $ARGV[$i] eq $k;
    }

    if ($found) {
      $lang2 = $ARGV[$i] if defined $lang1 and not defined $lang2;
      $lang1 = $ARGV[$i] if not defined $lang1;
      $i++;
      next;
    } else {
      if (defined $lang1) {
	if (defined($query)) {
	  $query = $query ." ". $ARGV[$i];
	} else {
	  $query = $ARGV[$i];
	}
	$i++;
	next;
      } else {
	print "error: invalid language $ARGV[$i]\n";
	exit $exitnonzeroonerror;
      }
    }
  }

  if (defined($query)) {
    $query = $query ." ". $ARGV[$i];
  } else {
    $query = $ARGV[$i];
  }
  $i++;
}

# by default enable both; preference will be deepl
($do_dl, $do_goog) = (1, 1) if $do_dl == 0 and $do_goog == 0;

#print "lang1: $lang1\n";
#print "lang2: $lang2\n";
#print "query: $query\n";

if (not defined $lang1) {
  print "error: unable to find target language\n";
  exit $exitnonzeroonerror;
}

if (defined $lang1 and defined $lang2 and $lang1 eq $lang2) {
  print "error: source and target languages are the same\n";
  exit $exitnonzeroonerror;
}

$query =~ s/^\s*// if defined $query;
$query =~ s/\s*$// if defined $query;

if (not defined $query or length $query == 0) {
  print "error: missing query\n";
  exit $exitnonzeroonerror;
}

if (defined $lang2) {
  $source = $lang1;
  $target = $lang2;
} else {
  $source = undef;
  $target = $lang1;
}

do_deepl() if $do_dl;
do_google() if $do_goog;

sub do_deepl {
  my $url = "https://api-free.deepl.com/v2/translate";
  my $apikey = getDeepLAPIKey();
  my $result;
  my $dsource = uc $source;

  my @targetlist = keys %lang_dl_target;
  if (not $target ~~ @targetlist) {
    print "DEEPL: not found: $target\n";
    return 0;
  }

  my $sourcedata = "";
  $sourcedata = "-d 'source_lang=" . uc $source . "'" if defined $source;
  my $targetdata = "-d 'target_lang=" . uc $target . "'";
  my $auth = "-H 'Authorization: DeepL-Auth-Key $apikey'";
  my $encodedquery = uri_escape_utf8($query);

  #print("curl --max-time 10 --stderr - -N -k -s -L -X POST '$url' $auth $sourcedata $targetdata -d 'text=$encodedquery'\n");
  open(HTTP, '-|', "curl --max-time 10 --stderr - -N -k -s -L -X POST '$url' $auth $sourcedata $targetdata -d 'text=$encodedquery' ");
  local $/;   # read entire file -- FIXME: potentially memory hungry
  my $json = <HTTP>;
  close(HTTP);
  #print ("$json\n");
  my $j = decode_json($json); # includes utf-8 decode

  if (defined $j->{translations} and defined $j->{translations}->[0]) {
    $dsource = lc $j->{translations}->[0]->{detected_source_language};
    $result = $j->{translations}->[0]->{text};
  }

  if (not defined $result) {
    print "DEEPL error: no result?\n";
    return 0;
  }

  #print "$lang{$source} to $lang{$target}: \"$query\" ⇒ \"$result\"\n";
  print "DEEPL: $lang_dl_source{$dsource} to $lang_dl_target{$target} ⇒ \"$result\"\n";
  return 1;
}

sub do_google {

  my $url = "https://translation.googleapis.com/language/translate/v2";
  my $apikey = getTranslateAPIKey();

  my $sourcedata = "";
  $sourcedata = "source=$source" if defined $source;

  #print("curl --max-time 10 --stderr - -N -k -s -L '$url' -d 'format=text&${sourcedata}&target=$target&key=$apikey&q=$query'", "\n");

  my $result;
  my $gsource = $source;

  open(HTTP, '-|', "curl --max-time 10 --stderr - -N -k -s -L '$url' -d 'format=text&${sourcedata}&target=$target&key=$apikey&q=$query'");
  local $/;   # read entire file -- FIXME: potentially memory hungry
  my $json = <HTTP>;
  close(HTTP);
  #print ("$json\n");
  my $j = decode_json($json); # includes utf-8 decode

  if (defined $j->{data}->{translations} and
      defined $j->{data}->{translations}->[0]) {
    $result = $j->{data}->{translations}->[0]->{translatedText};
    $gsource = $j->{data}->{translations}->[0]->{detectedSourceLanguage} if not defined $gsource;
  }

  if (not defined $gsource and $json =~ /"detectedSourceLanguage": "(.*)"/) {
    $gsource = $1;
  }

  if (not defined $result) {
    print "GOOGLE error: no result?\n";
    return 0;
  }

  #print "$lang{$gsource} to $lang{$target}: \"$query\" ⇒ \"$result\"\n";
  print "GOOGLE: $lang{$gsource} to $lang{$target} ⇒ \"$result\"\n";
  return 1;
}

sub getTranslateAPIKey {
  my $apikeyfile = $ENV{'HOME'} . "/.googleapikeys";
  our $translateapikey;
  if (-e ($apikeyfile)) {
    require($apikeyfile);
  } else {
    print "error: unable to read file $apikeyfile\n";
  }
  return $translateapikey;
}

sub getDeepLAPIKey {
  my $apikeyfile = $ENV{'HOME'} . "/.deeplapikey";
  our $deeplapikey;
  if (-e ($apikeyfile)) {
    require($apikeyfile);
  } else {
    print "error: unable to read file $apikeyfile\n";
  }
  return $deeplapikey;
}
