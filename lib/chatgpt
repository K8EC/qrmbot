#!/usr/bin/perl
#
# OpenAI chatGPT client
#
# 2-clause BSD license.
# Copyright (c) 2023 molo1134@github. All rights reserved.

use strict;
use utf8;
use Encode qw(decode);
use feature 'unicode_strings';
binmode(STDOUT, ":utf8");

use URI::Escape;
use JSON qw( decode_json );

use File::Basename;
use Cwd 'realpath';
use lib dirname(realpath(__FILE__));
use Colors;
use Util;

my $username = $ENV{'USER'} || $ENV{'USERNAME'} || getpwuid($<);

# change this to 0 to always exit with success
our $exitnonzeroonerror = 1;
$exitnonzeroonerror = 0 if $username eq getEggdropUID();

@ARGV = map { decode "utf-8", $_ } @ARGV;

if ($#ARGV < 0 || length($ARGV[0]) == 0) {
  if ($username eq getEggdropUID()) {
    print "usage: !qrm <text>\n";
  } else {
    print "usage: $0 <text>\n";
  }
  exit $exitnonzeroonerror;
}

# eggdrop doesn't split args on spaces
@ARGV=split(' ', join(' ',@ARGV));

my $input = join(' ', @ARGV);
$input =~ s/^\s+//;
$input =~ s/\s+$//;
$input =~ s/\\/\\\\/;
$input =~ s/['";\$]/\\$&/;

my $apikeydir = $ENV{'HOME'} . "/.qrmbot/keys";
my $apikeyfile = $apikeydir . "/openaikey";
our $apikey;

if (not -d $apikeydir) {
  print "making key directory..\n";
  system ("mkdir -p $apikeydir\n");
  if (not -d $apikeydir) {
    print "unable to make cache directory $apikeydir\n";
  }
}
if (-e ($apikeyfile)) {
  require($apikeyfile);
} else {
  print "error: unable to read file $apikeyfile\n";
  exit $exitnonzeroonerror;
}

my $url = "https://api.openai.com/v1/completions";
my $maxtokens = 200;
my $temperature = 0.5;

open(HTTP, '-|',"curl --max-time 15 -k -L -s '$url' " .
    "-H 'Content-Type: application/json' " .
    "-H 'Authorization: Bearer $apikey' " .
    "-d '{\"model\": \"text-davinci-003\", \"prompt\": \"${input}\", \"temperature\": ${temperature}, \"max_tokens\": ${maxtokens}}'");
local $/;   # read entire file -- FIXME: potentially memory hungry
my $json = <HTTP>;
close HTTP;
my $j = decode_json($json); # includes utf-8 decode
my $result = $j->{choices}->[0]->{text};
$result =~ s/^\s+//;
print $result, "\n";

# Define the request body
#my $request_body = {
#    "prompt" => "What is your name?",
#    "max_tokens" => 50,
#    "temperature" => 0.5,
#    "top_p" => 1,
#    "frequency_penalty" => 0,
#    "presence_penalty" => 0
#};

