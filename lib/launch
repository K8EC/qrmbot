#!/usr/bin/perl
# query upcoming rocket launches using launch library API
#

# 2-clause BSD license.
# Copyright (c) 2021 molo1134@github. All rights reserved.

use strict;
use utf8;
use feature 'unicode_strings';
binmode(STDOUT, ":utf8");

use File::Basename;
use Cwd 'realpath';
use lib dirname(realpath(__FILE__));
use Colors;
use Util;

use URI::Escape;
use JSON qw( decode_json );

my $username = $ENV{'USER'} || $ENV{'USERNAME'} || getpwuid($<);

# change this to 0 to always exit with success
our $exitnonzeroonerror = 1;
$exitnonzeroonerror = 0 if $username eq getEggdropUID(); 
# eggdrop doesn't split args on spaces
@ARGV=split(' ', join(' ',@ARGV));

my $i = 0;
my $term = "";
while ($i <= $#ARGV) {
  if (lc $ARGV[$i] eq "--spacex") {
    $term = "spacex";
    $i++;
    next;
  }
  if (lc $ARGV[$i] eq "--wallops") {
    $term = "wallops";
    $i++;
    next;
  }
  if (lc $ARGV[$i] eq "--vandenberg") {
    $term = "vandenberg";
    $i++;
    next;
  }
  if (lc $ARGV[$i] =~ /--cape/) {
    $term = "Canaveral";
    $i++;
    next;
  }
  $term .= " " if $term ne "";
  $term .= $ARGV[$i];
  $i++;
}

$term = uri_escape($term);

my $url = "https://ll.thespacedevs.com/2.0.0/launch/upcoming/?search=$term&limit=1";
open (HTTP, '-|', "curl --max-time 10 -s -k -L '$url'");
local $/;   # read entire file -- FIXME: potentially memory hungry
my $json = <HTTP>;
close(HTTP);
#print "$json\n";

if (not $json =~ /^\s*{/) {
  print "error while retrieving data: $json\n";
  exit $exitnonzeroonerror;
}

my $j = decode_json($json);

if (not defined $j or not defined $j->{results} or not defined $j->{results}[0]) {
  if (defined $j->{detail}) {
    print "error reported: $j->{detail}\n";
  } else {
    print "unexpected data error: $json\n";
  }
  exit $exitnonzeroonerror;
}

my $r = $j->{results}[0];

print bold($r->{name}), ": $r->{window_start} by $r->{launch_service_provider}->{name}";
print " ($r->{launch_service_provider}->{type})" if defined $r->{launch_service_provider}->{type};
print " ", bold("mission"), ": $r->{mission}->{name}";
print " ($r->{mission}->{type})" if defined $r->{mission}->{type};
print " ", bold("rocket"), ": $r->{rocket}->{full_name}" if defined $r->{rocket}->{full_name};
print " ", bold("site"), ": $r->{pad}->{name}, $r->{pad}->{location}->{name}";
print " ", bold("desc"), ": $r->{mission}->{description}" if defined $r->{mission}->{description};
print "\n";

exit 0;
